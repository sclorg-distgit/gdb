Index: gdb-7.12.50.20170207/gdb/infrun.c
===================================================================
--- gdb-7.12.50.20170207.orig/gdb/infrun.c	2017-02-07 21:07:40.321202448 +0100
+++ gdb-7.12.50.20170207/gdb/infrun.c	2017-02-07 21:07:42.680220365 +0100
@@ -2218,7 +2218,7 @@
   schedlock_replay,
   NULL
 };
-static const char *scheduler_mode = schedlock_replay;
+static const char *scheduler_mode = schedlock_step;
 static void
 show_scheduler_mode (struct ui_file *file, int from_tty,
 		     struct cmd_list_element *c, const char *value)
Index: gdb-7.12.50.20170207/gdb/testsuite/gdb.mi/mi-cli.exp
===================================================================
--- gdb-7.12.50.20170207.orig/gdb/testsuite/gdb.mi/mi-cli.exp	2017-02-07 21:07:40.322202455 +0100
+++ gdb-7.12.50.20170207/gdb/testsuite/gdb.mi/mi-cli.exp	2017-02-07 21:07:42.680220365 +0100
@@ -199,7 +199,7 @@
 # Test that the token is output even for CLI commands
 # Also test that *stopped includes frame information.
 mi_gdb_test "34 next" \
-    ".*34\\\^running.*\\*running,thread-id=\"all\"" \
+    ".*34\\\^running.*\\*running,thread-id=\"1\"" \
     "34 next: run"
 
 # Test that the new current source line is output to the console
Index: gdb-7.12.50.20170207/gdb/testsuite/gdb.mi/mi-logging.exp
===================================================================
--- gdb-7.12.50.20170207.orig/gdb/testsuite/gdb.mi/mi-logging.exp	2017-02-07 21:07:42.681220372 +0100
+++ gdb-7.12.50.20170207/gdb/testsuite/gdb.mi/mi-logging.exp	2017-02-07 21:09:36.950088269 +0100
@@ -53,7 +53,7 @@
 
 set mi_log_prompt "\[(\]gdb\[)\] \[\r\n\]+"
 
-if [regexp "\\^done\[\r\n\]+$mi_log_prompt\\^running\[\r\n\]+\\*running,thread-id=\"all\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt\\^running\[\r\n\]+\\*running,thread-id=\"all\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt" $logcontent] {
+if [regexp "\\^done\[\r\n\]+$mi_log_prompt\\^running\[\r\n\]+\\*running,thread-id=\"1\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt\\^running\[\r\n\]+\\*running,thread-id=\"1\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt" $logcontent] {
     pass "log file contents"
 } else {
     fail "log file contents"
@@ -76,7 +76,7 @@
 set logcontent [read $chan]
 close $chan
 
-if [regexp "1001\\^done\[\r\n\]+$mi_log_prompt.*1002\\^running\[\r\n\]+\\*running,thread-id=\"all\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt.*1003\\^running\[\r\n\]+\\*running,thread-id=\"all\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt" $logcontent] {
+if [regexp "1001\\^done\[\r\n\]+$mi_log_prompt.*1002\\^running\[\r\n\]+\\*running,thread-id=\"1\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt.*1003\\^running\[\r\n\]+\\*running,thread-id=\"1\"\[\r\n\]+$mi_log_prompt\\*stopped,reason=\"end-stepping-range\",.*\[\r\n\]+$mi_log_prompt" $logcontent] {
     pass "redirect log file contents"
 } else {
     fail "redirect log file contents"
Index: gdb-7.12.50.20170207/gdb/testsuite/gdb.mi/mi-console.exp
===================================================================
--- gdb-7.12.50.20170207.orig/gdb/testsuite/gdb.mi/mi-console.exp	2017-02-07 21:07:40.323202463 +0100
+++ gdb-7.12.50.20170207/gdb/testsuite/gdb.mi/mi-console.exp	2017-02-07 21:07:42.681220372 +0100
@@ -60,6 +60,9 @@
 
 mi_run_to_main
 
+# thread-id=\"all\" vs. thread-id=\"1\" below:
+mi_gdb_test "210-gdb-set scheduler-locking off" "210\\^done" "set scheduler-locking off"
+
 # The output we get from the target depends on how it is hosted.  If
 # we are semihosted (e.g., the sim or a remote target that supports
 # the File I/O remote protocol extension), we see the target I/O
Index: gdb-7.12.50.20170207/gdb/testsuite/gdb.opt/inline-cmds.exp
===================================================================
--- gdb-7.12.50.20170207.orig/gdb/testsuite/gdb.opt/inline-cmds.exp	2017-02-07 21:07:40.323202463 +0100
+++ gdb-7.12.50.20170207/gdb/testsuite/gdb.opt/inline-cmds.exp	2017-02-07 21:07:42.681220372 +0100
@@ -331,7 +331,7 @@
 
     send_gdb "interpreter-exec console \"step\"\n"
     gdb_expect {
-	-re "\\^running\r\n\\*running,thread-id=\"all\"\r\n${mi_gdb_prompt}${cli_output_re}" {
+	-re "\\^running\r\n\\*running,thread-id=\"1\"\r\n${mi_gdb_prompt}${cli_output_re}" {
 	    pass $message
 	}
 	timeout {
